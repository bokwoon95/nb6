fs.go
schema.go
notebrew.go
static.go
login.go
logout.go
resetpassword.go
file.go
createfile.go
createfolder.go
delete.go
rename.go
move.go
copy.go
recycle.go
admin.go
new.go

/admin/rssreader/ is a pseudo-folder (it does not reside in the file system, but rather the database? or can it be in the file system?) reserved for the rss reader feed

TODO: the ability to pin notes (which is translated as moving it into a "pinned" folder. this means when listing the notes you need to read the "pinned" folder separately)
TODO: cut, copy and delete
TODO: delet() should only move file to the recycle bin, and the user is given an link to immediately undo what has been done (which simply takes them to /admin/{sitePrefix}/recover/).
TODO: filesystem_folder.html file sorting. sort=created,edited,title order=asc,desc. default is sort=created order=desc, but the whenever the user changes the sort order (i.e. clicking on a link) there is some javascript that will run and set a (non-HTTPOnly) cookie with the sort or order value. Then whenever a future request comes in that doesn't specify the sort or order query params, the server will fall back on whatever is in the sort or order cookies respectively. And if that is not provided, it will fall back on sort=created order=desc instead.
TODO: delete note => show the title and preview instead of the cryptic uuid filename
TODO: create note => flash "note created" message when a note is created so that the user notices that the note was saved.
TODO: filesystem_note.html => if it's a note, display filesystem_note.html instead. It should show "<- back | {category} | notes | admin" and omit the breadcrumb trail (it is displayed, but in reverse).
    TODO: for posts, also show a "| rename url slug" option which allows the user to rename the post filename.
    Eventually, we want to offer users a helpful option to include a redirect page from the old page to the new. What it does is create a file entry in /admin/{sitePrefix}/system/ which serves as the definite source of truth WRT to old renamed posts. On the /admin/{sitePrefix}/site/ end, a HTML meta-equiv page is generated so that a static site server can still serve those redirects.
TODO: beautify the create-note page, the form is too ugly and it's hard to visually distinguish the text in the labels vs the text in the inputs.

notebrew create-post 'my trip to hokkaido'

/admin/posts/06561zgak1ta971c194et34178.md
/admin/posts/01jfdk6q-a-whole-new-world.md

"Notes are private and can only be accessed by the owner(s) of a site"
"Pages are public and accessible at the URL bokwoon.notebrew.io. Pages may invoke other HTML templates defined in the [themes](/site/themes/) folder. For more information, see the [guide](/path/to/guide)."
"Posts are public and located under bokwoon.notebrew.io/posts/"
"Site contains the static files used to serve bokwoon.notebrew.io. Readonly."
"Themes contain HTML templates as well as site assets (CSS stylesheets, JavaScript scripts, images)"

TODO: on file/folder/note/post creation, do a ReadDir to make sure each folder never has more than 1,000,000 entries. This is not for the users, this is for you. It ensures that no one can maliciously grind the server to a halt by creating too many files in a single folder and making people load that folder.

TODO: eventually add the ablity to upload files. We can make do with manual file creation for now.

title (size) - date preview

TODO: We would eventually need add a mode to notebrew that simply serves a static multisite website from an admin folder. As in, serving a site/ folder is very straightforward with Apache or Nginx or whatever, but serving a multiple websites (subdomain/subdirectory multisite) requires knowledge of the admin folder structure which only notebrew can do. It's very important so that people can author files locally (without a DB), sync the folder using Dropbox and rsync it to a server to publish it, where notebrew is running and serving those files (*all static files*, so no one can hack it because there's nothing to hack).

TODO: split up createfile/createfolder
/admin/createpost/
/admin/posts/{postID}.md
/admin/createnote/
/admin/notes/{noteID}.md
/admin/createfile/
/admin/themes/{path_to_file}
/admin/createfolder/
POST /admin/cut/
{"cut":true,"files":[]}
POST /admin/copy/
POST /admin/paste/
clipboard=0123456789abcdef
{"cut":true,"source_folder":"","destination_folder":"","filenames":[]}
POST /admin/clear/
/admin/fileconflict/

POST /admin/copy/
<button type="submit" name="filenames" value="foo.md">delete</button>
POST /admin/delete/
POST /admin/rename/
POST /admin/paste/
{"cut":true,"source_folder":"","destination_folder":"","filenames":[]}

TODO: rate limiting failed logins (keyed by username, IP address)

/admin/static/...
/admin/login/
/admin/logout/
/admin/resetpassword/
/admin/@bokwoon/createfile/
/admin/@bokwoon/createfolder/
/admin/@bokwoon/rename/
/admin/@bokwoon/recylebin/
/admin/@bokwoon/delete/ TODO: rearchitect
/admin/@bokwoon/move/ TODO: rearchitect
/admin/@bokwoon/copy/ TODO: rearchitect
/admin/@bokwoon/{posts|notes|pages|templates|assets|images}/...
/admin/

delete has no error page
move

cut copy delete | paste

authentication=0123456789
notebrew-authentication: 0123456789

singlepaths: createfile, createfolder, delete, rename, move, login, logout, resetpassword
what if someone visits /admin/@bokwoon/login/?
what if someone visits /admin/@bokwoon/static/?

https://notebrew.com/admin/@bokwoon/posts/12345.md
https://notebrew.com/admin/@bokwoon/posts/12345/
https://notebrew.blog/@bokwoon/posts/12345/
https://bokwoon.notebrew.blog/posts/12345/

https://notebrew.com/admin/@bokwoon/pages/about-me.html
https://notebrew.com/admin/@bokwoon/pages/about-me/

only posts and pages have previews
notes and assets have no previews, WYSIWYG
